<?xml version="1.0"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/batch 
           http://www.springframework.org/schema/batch/spring-batch-3.0.xsd">

	<import resource="classpath:batch-execution-config.xml" />

	<job id="batchFileProcessJob" xmlns="http://www.springframework.org/schema/batch">
		<step id="processRecords">
			<tasklet>
				<chunk reader="reader" processor="processor" writer="writer" commit-interval="2" >					
				</chunk>
			</tasklet>			
		</step>	
		<listeners>
			<listener ref="batchJobListener" />
		</listeners>
	</job>	
	
	<bean id="reader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
		<property name="resource" value="#{jobParameters['inputResource']}" />
		<property name="linesToSkip" value="1" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="PRODUCT_ID,NAME,UNIT_PRICE,QUANTITY" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="io.baselogic.batch.file_input.process.ProductFieldSetMapper" />
				</property>
			</bean>
		</property>		
	</bean>
	
	<bean id="processor" class="io.baselogic.batch.file_input.process.ProductItemProcessor"/>
		
	<bean id="writer" class="io.baselogic.batch.file_input.process.ProductJdbcItemWriter">
		<constructor-arg ref="dataSource" />
	</bean>
	
	<bean id="batchJobListener" class="io.baselogic.batch.file_input.process.BatchJobListener" />

</beans>
