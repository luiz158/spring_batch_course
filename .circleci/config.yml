##---------------------------------------------------------------------------##
# Spring Batch Master Class
##---------------------------------------------------------------------------##
# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
# TO Revisit:
# https://github.com/AnySoftKeyboard/AnySoftKeyboard/blob/master/circle.yml
##---------------------------------------------------------------------------##
version: 2



##---------------------------------------------------------------------------##
jobs:

  INIT_PROJECT:
    steps:
    - checkout
    - run:
        name: Initialize
        command: |
          set -xu
          echo $CIRCLE_WORKING_DIRECTORY
          mkdir -p ~/junit/
          ls -la ~/junit

    - run:
        name: listing after saving test results
        command: |
          set -xu
          ls -la ~/junit

  POST:
    steps:
    - run:
        name: Post actions
        command: |
          set -xu
          echo $CIRCLE_WORKING_DIRECTORY
          mkdir -p ~/junit/
          ls -la ~/junit

    - run:
        name: listing after saving test results
        command: |
          set -xu
          ls -la ~/junit

##---------------------------------------------------------------------------##

    CORE:
      docker:
        - image: circleci/openjdk:8-jdk-browsers
          environment:
            BASE_DIR: "./StudentWork/code/spring_batch_section_core"
            _JAVA_OPTIONS: "-Xms512m -Xmx1024m"
      working_directory: ~/tmp/workspace
      #working_directory: ~/circleci-blinc-workflows

      steps:
        - checkout
        - run:
            name: Initialize JUnit Dir
            command: |
              set -xu
              echo $CIRCLE_WORKING_DIRECTORY
              mkdir -p ~/junit/
        - run:
            name: Verify the CORE Module
            command: mvn verify
            working_directory: ./StudentWork/code
        - run:
            name: Save test results
            command: |
              set -xu
              find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
            when: always

        - run:
            name: Save Coverage results
            command: |
              set -xu
              find . -type f -regex ".*/target/jacoco/jacoco.xml" -exec cp {} ~/junit/ \;


##---------------------------------------------------------------------------##

workflows:
  version: 2
  build_and_test:
    jobs:
    - INIT_PROJECT
    - CORE:
        requires:
        - INIT_PROJECT

##---------------------------------------------------------------------------##
## The End... ##
##---------------------------------------------------------------------------##
