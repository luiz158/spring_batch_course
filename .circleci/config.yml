##---------------------------------------------------------------------------##
# Spring Batch Master Class
##---------------------------------------------------------------------------##
# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
# TO Revisit:
# https://github.com/AnySoftKeyboard/AnySoftKeyboard/blob/master/circle.yml
##---------------------------------------------------------------------------##
version: 2

##---------------------------------------------------------------------------##
jobs:
  section_core:
    docker:
    - image: circleci/openjdk:8-jdk-browsers
      environment:
        BASE_DIR: "./StudentWork/code"
        _JAVA_OPTIONS: "-Xms512m -Xmx1024m"
    working_directory: ~/tmp/workspace
    #working_directory: ~/circleci-blinc-workflows

    steps:
      - checkout
      - run:
          name: Initialize JUnit Dir
          command: |
            set -xu
            echo $CIRCLE_WORKING_DIRECTORY
            mkdir -p ~/junit/
  
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
  
      - run: mvn dependency:go-offline
  
      - save_cache:
          paths:
          - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
  
      - run:
          name: Verify the CORE Module
          command: mvn verify
          working_directory: ./StudentWork/code
      - run:
          name: Save test results
          command: |
            set -xu
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always
  
      - run:
          name: Save Coverage results
          command: |
            set -xu
            find . -type f -regex ".*/target/jacoco/jacoco.xml" -exec cp {} ~/junit/ \;


##---------------------------------------------------------------------------##

workflows:
  version: 2
  test_all_sections:
    jobs:
      - section_core

##---------------------------------------------------------------------------##
## The End... ##
##---------------------------------------------------------------------------##
